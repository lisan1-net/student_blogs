# Generated by Django 5.0.3 on 2024-03-14 03:29

import django.core.validators
import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Blog title', max_length=100, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='Blog description', verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the text', max_length=200, verbose_name='Title')),
                ('content', models.TextField(help_text='Content of the text', verbose_name='Content')),
                ('type', models.CharField(choices=[('SPOKEN', 'Spoken'), ('WRITTEN', 'Written'), ('NOTEBOOKS', 'Notebooks')], help_text='Type of the text', max_length=10, verbose_name='Type')),
                ('student_number', models.IntegerField(help_text='Number of the student writer of this text', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Student number')),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], help_text='Student sex', max_length=1, verbose_name='Sex')),
                ('level', models.IntegerField(help_text='Level of the student writer of this text', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Level')),
                ('school', models.CharField(help_text='School of the student writer of this text', max_length=100, verbose_name='School')),
                ('city', models.CharField(help_text='City of the student writer of this text', max_length=100, verbose_name='City')),
                ('added', models.DateTimeField(auto_now_add=True, help_text='Date and time of adding the text to the database', verbose_name='Added on')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Date and time of the last update of the text in the database', verbose_name='Last updated on')),
                ('blog', models.ForeignKey(help_text='Blog that contains this text', on_delete=django.db.models.deletion.CASCADE, to='main.blog', verbose_name='Blog')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Text',
                'verbose_name_plural': 'Texts',
            },
        ),
    ]
